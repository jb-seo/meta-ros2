diff --git a/rosidl_parser/rosidl_parser/__init__.py b/rosidl_parser/rosidl_parser/__init__.py
index 41c0ce7..d0a4020 100644
--- a/rosidl_parser/rosidl_parser/__init__.py
+++ b/rosidl_parser/rosidl_parser/__init__.py
@@ -15,6 +15,16 @@
 import os
 import re
 
+#from rosidl_cmake import convert_camel_case_to_lower_case_underscore
+def convert_camel_case_to_lower_case_underscore(value):
+    # insert an underscore before any upper case letter
+    # which is not followed by another upper case letter
+    value = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', value)
+    # insert an underscore before any upper case letter
+    # which is preseded by a lower case letter or number
+    value = re.sub('([a-z0-9])([A-Z])', r'\1_\2', value)
+    return value.lower()
+
 PACKAGE_NAME_MESSAGE_TYPE_SEPARATOR = '/'
 COMMENT_DELIMITER = '#'
 CONSTANT_SEPARATOR = '='
@@ -128,7 +138,7 @@ def is_valid_constant_name(name):
 
 class BaseType:
 
-    __slots__ = ['pkg_name', 'type', 'string_upper_bound']
+    __slots__ = ['pkg_name', 'type', 'string_upper_bound', 'module_name']
 
     def __init__(self, type_string, context_package_name=None):
         # check for primitive types
@@ -151,7 +161,6 @@ class BaseType:
                 raise ex
             if self.string_upper_bound <= 0:
                 raise ex
-
         else:
             # split non-primitive type information
             parts = type_string.split(PACKAGE_NAME_MESSAGE_TYPE_SEPARATOR)
@@ -172,6 +181,7 @@ class BaseType:
             if not is_valid_message_name(self.type):
                 raise InvalidResourceName(self.type)
             self.string_upper_bound = None
+        self.module_name = convert_camel_case_to_lower_case_underscore(self.type)
 
     def is_primitive_type(self):
         return self.pkg_name is None
